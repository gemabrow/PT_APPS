(defun c:chairbom ()
  (setq scalelist '(192.0   128.0    96.0    72.0
                     48.0    36.0    24.0    16.0
                     12.0     8.0  1270.0  2540.0
                   3810.0  5080.0  6350.0  7620.0
                   8890.0 10160.0 11430.0 12700.0))
  ;PROGRAM TO READ ATTRIBUTE FILE (<currentDWGdir>\CHAIRBOM.TXT)
  ;AND TO WRITE A CHAIR BILL-OF-MATERIALS BACK TO DRAWING
  (setq osmode (getvar 'osmode))
  (setvar "CMDECHO" 0)
  (setvar "FILEDIA" 0)

  ;SET OUTPUT PATH
  (setq current_dir (getvar 'Dwgprefix))
  (setq chairbom_output (strcat current_dir "\chairbom.txt"))

  ;EXTRACT ATTRIBUTES
  (command "attext" "" "c:\\apps\\PT_CAD\\bom\\chairtem.txt" chairbom_output)
  
  ;READ EXTRACTED ATTRIBUTES
  (setvar "FILEDIA" 1)
  (setq a (open chairbom_output "r"))
  (setq charlist 
     '("1" "2" "3" "4" "5" "6" "7" "8" "9" "0" "~" "/" "\"" "q" "w" "e" "r" "t"))
  (setq scale (getvar "dimscale")) 
  (if (not (member scale scalelist))
     (progn
        (setq scale (getreal "Enter scale factor - 96 for 1/8\", 128 for 3/32\", 192 for 1/16\" [SCALE FACTOR X 25.4 FOR METRIC]: "))
        (setvar "dimscale" scale)))
  (command "style" "ROMANS" "ROMANS.shx,SPECIAL.shx" (/ (getvar "dimscale") 8.0) 0.9 0 "N" "N" "N")
  (setq chrhts '())
  (setq alist '())
  (listatt)
  (close a)
  (setq sp (getpoint "Pick starting point for chair schedule: "))
  (setvar "OSMODE" 0)
  (printctable sp)
  (setvar "CMDECHO" 1)
  (setvar "OSMODE" osmode))

(defun listatt ()
   (while (setq l (read-line a))  
      (setq cl (proline l 1 nil nil ""))
      (setq lastc (substr (car cl) (strlen (car cl)) 1))

      ;HANDLE NO QUANTITY CALLOUT IN MULT. CHAIR BLOCK
      ;CONSOLIDATE CALLOUTS W/ AND W/O INCH MARKS
      (if (/= lastc "\"")
          (progn
             (setq htinch (strcat (car cl) "\""))
             (setq cl (list htinch (cadr cl)))))
      (if (= (cadr cl) 0)             ;IF QUANTITY IS 0 THEN CHAIR CALLOUT QUANTITY IS TWO
          (setq cl (subst 2 0 cl)))

      (if (not (member (car cl) chrhts))
          (progn
             (setq chrhts (cons (car cl) chrhts))
             (setq alist (cons cl alist)))
          (progn 
             (setq old (assoc (car cl) alist))
             (setq new (append old (cdr cl)))
             (setq alist (subst new old alist)))))
   (setq slist '())
      
;;;				Sort alsit descending order    					;;;
;;;	The cons function for slist reverses the order thus making it ascneding order     	;;;
      
   (foreach x (vl-sort alist
                '(lambda (a b) (> (_ToDecimal (Car a)) (_ToDecimal (car b)))))
      (setq slist (cons (list (car x) (apply '+ (cdr x))) slist))))

(defun proline (l cn 2f h n / hnl cc )
   (setq cc (substr l cn 1))  
   (cond
     ((= cn (1+ (strlen l)))
       (setq hnl (list h (atoi n))))
     ((and (member cc charlist) (not 2f))
       (if (= h nil)
         (setq h cc)
         (setq h (strcat h cc)))
       (proline l (1+ cn) nil h n))
     ((= cc ",")
       (proline l (1+ cn) T h n))
     ((and (member cc charlist) 2f)
       (if (= n "")
         (setq n cc)
         (setq n (strcat n cc)))
       (proline l (1+ cn) T h n))
     (T
       (proline l (1+ cn) 2f h n)))) 

(defun printctable (sp)
  ;Prints CTABLE Block with values from listatt result
  (setq output_layer "BAND_SUP_TEXT")
  (setq chaired_layers "BAND_SUP_TEXT,UNIFORM_SUP_TEXT")
  (setq output_block "C:\\Apps\\PT_CAD\\GENERAL\\CTABLE.dwg")
  (setq pour_num (getstring "Pour(s)?"))
  (setq floor_num (getstring "Floor(s)?"))
  (setq index (length slist))
  (setq max_entries 47)
  (while (< index max_entries)
    (setq slist (append slist (list '("-" "-"))))
    (setq index (1+ index)))
  
  (command "-LAYER" "_ON" chaired_layers
                    "_T" chaired_layers
                    "_S" output_layer "")
  (command "-INSERT" output_block sp 1
    1 0 pour_num floor_num 
    ;TODO - find a means of iterating that is command-input-friendly
    (chair_height 0)
    (car (nth 0 slist))
    (chair_height 1)
    (car (nth 1 slist))
    (chair_height 2)
    (car (nth 2 slist))
    (chair_height 3)
    (car (nth 3 slist))
    (chair_height 4)
    (car (nth 4 slist))
    (chair_height 5)
    (car (nth 5 slist))
    (chair_height 6)
    (car (nth 6 slist))
    (chair_height 7)
    (car (nth 7 slist))
    (chair_height 8)
    (car (nth 8 slist))
    (chair_height 9)
    (car (nth 9 slist))
    (chair_height 10)
    (car (nth 10 slist))
    (chair_height 11)
    (car (nth 11 slist))
    (chair_height 12)
    (car (nth 12 slist))
    (chair_height 13)
    (car (nth 13 slist))
    (chair_height 14)
    (car (nth 14 slist))
    (chair_height 15)
    (car (nth 15 slist))
    (chair_height 16)
    (car (nth 16 slist))
    (chair_height 17)
    (car (nth 17 slist))
    (chair_height 18)
    (car (nth 18 slist))
    (chair_height 19)
    (car (nth 19 slist))
    (chair_height 20)
    (car (nth 20 slist))
    (chair_height 21)
    (car (nth 21 slist))
    (chair_height 22)
    (car (nth 22 slist))
    (chair_height 23)
    (car (nth 23 slist))
    (chair_height 24)
    (car (nth 24 slist))
    (chair_height 25)
    (car (nth 25 slist))
    (chair_height 26)
    (car (nth 26 slist))
    (chair_height 27)
    (car (nth 27 slist))
    (chair_height 28)
    (car (nth 28 slist))
    (chair_height 29)
    (car (nth 29 slist))
    (chair_height 30)
    (car (nth 30 slist))
    (chair_height 31)
    (car (nth 31 slist))
    (chair_height 32)
    (car (nth 32 slist))
    (chair_height 33)
    (car (nth 33 slist))
    (chair_height 34)
    (car (nth 34 slist))
    (chair_height 35)
    (car (nth 35 slist))
    (chair_height 36)
    (car (nth 36 slist))
    (chair_height 37)
    (car (nth 37 slist))
    (chair_height 38)
    (car (nth 38 slist))
    (chair_height 39)
    (car (nth 39 slist))
    (chair_height 40)
    (car (nth 40 slist))
    (chair_height 41)
    (car (nth 41 slist))
    (chair_height 42)
    (car (nth 42 slist))
    (chair_height 43)
    (car (nth 43 slist))
    (chair_height 44)
    (car (nth 44 slist))
    (chair_height 45)
    (car (nth 45 slist))
    (chair_height 46)
    (car (nth 46 slist))
    0 0 0)); 3/4" SB, 1" SB, & 1-1/4" SB

(defun chair_height (index)
  (if (numberp (cadr (nth index slist)))
    (fix (1+ (* (cadr (nth index slist)) 1.05)))
    (cadr (nth index slist))))

;;;		pBe Helper function to sort alist variable	;;;
;;;								;;;
(defun _ToDecimal (str / p  )
  (if (vl-string-position 126 str)
    (distof
      (vl-some
        '(lambda (s)
          (if (Setq p (vl-string-search (Car s) str))
            (vl-string-subst (cadr s) (Car s) str p)))
        '(("~1\"" ".625")
          ("~2\""  ".125")
          ("~3\""  ".1875")
          ("~4\""  ".25")
          ("~5\""  ".3125")
          ("~6\""  ".375")
          ("~7\""  ".4375")
          ("~8\""  ".5")
          ("~9\""  ".5625")
          ("~0\""  ".625")
          ("~q\""  ".6875")
          ("~w\""  ".75")
          ("~r\""  ".875")
          ("~t\""  ".9375"))))
    (atoi str)))  